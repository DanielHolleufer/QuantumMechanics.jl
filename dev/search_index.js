var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = QuantumMechanics","category":"page"},{"location":"#QuantumMechanics","page":"Home","title":"QuantumMechanics","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for QuantumMechanics.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [QuantumMechanics]","category":"page"},{"location":"#QuantumMechanics.CompositeBasis","page":"Home","title":"QuantumMechanics.CompositeBasis","text":"CompositeBasis(b::Basis...)\n\nCreate a basis for the composite system consisting of the systems corresponding to the given bases.\n\nIt is possible for a CompositeBasis to contain another CompositeBasis.\n\nExamples\n\njulia> composite_basis = CompositeBasis(GenericBasis(8), FockBasis(50, 20))\nCompositeBasis{Tuple{GenericBasis{Int64}, FockBasis{Int64}}, Vector{Int64}}((GenericBasis{Int64}(8), FockBasis{Int64}(31, 50, 20)), [8, 31])\n\njulia> CompositeBasis(composite_basis, SpinBasis(3//2))\nCompositeBasis{Tuple{CompositeBasis{Tuple{GenericBasis{Int64}, FockBasis{Int64}}, Vector{Int64}}, SpinBasis{3//2, Int64}}, Vector{Int64}}((CompositeBasis{Tuple{GenericBasis{Int64}, FockBasis{Int64}}, Vector{Int64}}((GenericBasis{Int64}(8), FockBasis{Int64}(31, 50, 20)), [8, 31]), SpinBasis{3//2, Int64}(4, 3//2)), [248, 4])\n\n\n\n\n\n","category":"type"},{"location":"#QuantumMechanics.FockBasis","page":"Home","title":"QuantumMechanics.FockBasis","text":"FockBasis(cutoff::Integer, offset::Integer=0)\n\nCreate a basis for the Fock space starting at the offset and ending at the cutoff.\n\nExamples\n\njulia> FockBasis(10)\nFockBasis{Int64}(11, 10, 0)\n\njulia> FockBasis(10, 2)\nFockBasis{Int64}(9, 10, 2)\n\n\n\n\n\n","category":"type"},{"location":"#QuantumMechanics.GenericBasis","page":"Home","title":"QuantumMechanics.GenericBasis","text":"GenericBasis(d)\n\nCreate a generic basis with dimension d for a Hilbert space.\n\nExamples\n\njulia> GenericBasis(4)\nGenericBasis{Int64}(4)\n\n\n\n\n\n","category":"type"},{"location":"#QuantumMechanics.SpinBasis","page":"Home","title":"QuantumMechanics.SpinBasis","text":"SpinBasis(spin)\n\nCreate a basis for a spin system with total spin equal to spin.\n\nThe argument spin must be integer or half integer. It is then stored as a Rational.\n\nExamples\n\njulia> SpinBasis(1 // 2)\nSpinBasis{1//2, Int64}(2, 1//2)\n\njulia> SpinBasis(100)\nSpinBasis{100//1, Int64}(201, 100//1)\n\n\n\n\n\n","category":"type"},{"location":"#Base.length-Tuple{Basis}","page":"Home","title":"Base.length","text":"length(b::Basis)\n\nReturn the total dimension of the Hilbert space spanned by the basis b.\n\n\n\n\n\n","category":"method"},{"location":"#QuantumMechanics.tensor-Tuple{Basis}","page":"Home","title":"QuantumMechanics.tensor","text":"tensor(b::Basis...)\n\nCreate a basis for the composite system consisting of the systems corresponding to the given bases.\n\nWhen using tensor, rather than CompositeBasis, any CompositeBasis will be expanded into its components, meaning that the CompositeBasis returned from tensor will never contain another CompositeBasis.\n\nIt is also possible to use to otimes symbol ⊗ as an infix operator.\n\nExamples\n\njulia> composite_basis = tensor(GenericBasis(8), FockBasis(50, 20))\nCompositeBasis{Tuple{GenericBasis{Int64}, FockBasis{Int64}}, Vector{Int64}}((GenericBasis{Int64}(8), FockBasis{Int64}(31, 50, 20)), [8, 31])\n\njulia> tensor(composite_basis, SpinBasis(3//2))\nCompositeBasis{Tuple{GenericBasis{Int64}, FockBasis{Int64}, SpinBasis{3//2, Int64}}, Vector{Int64}}((GenericBasis{Int64}(8), FockBasis{Int64}(31, 50, 20), SpinBasis{3//2, Int64}(4, 3//2)), [8, 31, 4])\n\njulia> GenericBasis(12) ⊗ FockBasis(25) ⊗ SpinBasis(1)\nCompositeBasis{Tuple{GenericBasis{Int64}, FockBasis{Int64}, SpinBasis{1//1, Int64}}, Vector{Int64}}((GenericBasis{Int64}(12), FockBasis{Int64}(26, 25, 0), SpinBasis{1//1, Int64}(3, 1//1)), [12, 26, 3])\n\n\n\n\n\n","category":"method"}]
}
